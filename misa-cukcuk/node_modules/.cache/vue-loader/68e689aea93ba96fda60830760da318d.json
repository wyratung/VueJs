{"remainingRequest":"D:\\MisaVueJS\\misa-cukcuk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MisaVueJS\\misa-cukcuk\\src\\components\\base\\BaseCombobox.vue?vue&type=style&index=0&id=e9460fa8&scoped=true&lang=css&","dependencies":[{"path":"D:\\MisaVueJS\\misa-cukcuk\\src\\components\\base\\BaseCombobox.vue","mtime":1628393597345},{"path":"D:\\MisaVueJS\\misa-cukcuk\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MisaVueJS\\misa-cukcuk\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\MisaVueJS\\misa-cukcuk\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\MisaVueJS\\misa-cukcuk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MisaVueJS\\misa-cukcuk\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCkBpbXBvcnQgdXJsKCIuLi8uLi9jc3MvY29tbW9uL2NvbWJvYm94LmNzcyIpOw0K"},{"version":3,"sources":["BaseCombobox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA","file":"BaseCombobox.vue","sourceRoot":"src/components/base","sourcesContent":["<template>\r\n  <div class=\"combobox\" :class=\"{ 'combobox--show': isShow }\">\r\n    <input\r\n      type=\"text\"\r\n      class=\"combobox__input\"\r\n      placeholder=\"Chọn/Nhập thông tin\"\r\n      v-bind=\"$attrs\"\r\n      :value=\"value\"\r\n      v-on=\"inputListeners\"\r\n    />\r\n    <div class=\"combobox__input-cancel\" @click=\"clearComboboxValue\">\r\n      <i class=\"fas fa-times-circle\"></i>\r\n    </div>\r\n    <div class=\"combobox__dropdown\" @click=\"toggleList\">\r\n      <i class=\"fas fa-chevron-down combobox__icon\"></i>\r\n    </div>\r\n    <ul class=\"combobox__list\">\r\n      <li\r\n        v-for=\"(item, index) in listData\"\r\n        :key=\"index\"\r\n        class=\"combobox__item\"\r\n        @click=\"chooseItem(item['DepartmentName'], index)\"\r\n        :class=\"{ active: isSelectedItem(index) }\"\r\n      >\r\n        <i class=\"fas fa-check checkmark\"></i>\r\n        <div class=\"combobox-item-text\">{{ item[\"DepartmentName\"] }}</div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"BaseCombobox\",\r\n  props: {\r\n    value: {\r\n      type: String,\r\n      default() {\r\n        return \"\";\r\n      },\r\n    },\r\n    typeCombobox: {\r\n      type: String,\r\n      default() {\r\n        return \"\";\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isShow: false,\r\n      listData: [],\r\n      selectedItem: -1,\r\n    };\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      console.log(\"get data\");\r\n      //load dữ liệu và hiển thị\r\n      await axios\r\n        .get(\"http://cukcuk.manhnv.net/api/Department\")\r\n        .then((response) => {\r\n          this.listData = response.data;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    async toggleList() {\r\n      if (this.isShow) {\r\n        this.isShow = false;\r\n      } else {\r\n        await this.getData();\r\n        this.isShow = true;\r\n      }\r\n    },\r\n    clearComboboxValue() {\r\n      this.$emit(\"clearComboboxValue\", this.typeCombobox);\r\n    },\r\n    chooseItem(selectedValue, index) {\r\n      this.isShow = false;\r\n      this.selectedItem = index;\r\n      this.$emit(\"updateComboboxValue\", this.typeCombobox, selectedValue);\r\n    },\r\n    isSelectedItem(index) {\r\n      console.log(index == this.selectedItem);\r\n      return index == this.selectedItem;\r\n    },\r\n  },\r\n  computed: {\r\n    /**\r\n     * lắng nghe các sự kiện từ input\r\n     */\r\n    inputListeners() {\r\n      var vm = this;\r\n      return Object.assign({}, this.$listeners, {\r\n        input: function (event) {\r\n          vm.$emit(\"input\", event.target.value);\r\n        },\r\n        async focus() {\r\n          await vm.getData();\r\n          vm.isShow = true;\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"../../css/common/combobox.css\");\r\n</style>"]}]}